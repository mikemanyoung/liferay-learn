var pageComponent=webpackJsonppageComponent([3],{270:function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function l(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var a=n(1),s=o(a),c=n(3),p=o(c);n(7),n(8),n(9),n(10),n(11),n(12),n(13),n(14),n(15),n(16);var u=n(271),h=o(u),d=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return l(t,e),t}(s.default);p.default.register(d,h.default),t.default=d},271:function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function l(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0}),t.templates=t.jefDs=void 0;var a,s=n(1),c=o(s),p=n(3),u=o(p);goog.loadModule(function(e){function t(e,t,o){var a=function(){r("h6");var t=e.page.description;"function"==typeof t?t():null!=t&&s(t),i("h6"),r("article",null,null,"id","1"),r("h2"),s("Deploy Multiple Implementations of a Service"),i("h2"),r("p"),s("Each API can have multiple service implementations. Let’s try it out to see how multiple service implementations interact in the OSGi runtime."),i("p"),r("aside"),r("h6"),l("span",null,null,"class","icon-16-star"),s(" Pro Tip"),i("h6"),r("p"),s("If you run into problems, or if something in here is unclear, check out the video in the next chapter for a step-by-step walkthrough video of the entire exercise."),i("p"),i("aside"),r("h6"),s("Your Task"),i("h6"),r("p"),s("Create a new OSGi service that overrides the helloworld API."),i("p"),c({code:"package com.liferay.university.hello.uppercase.impl;\n\nimport com.liferay.university.hello.api.HelloService;\nimport org.osgi.service.component.annotations.Component;\n\n@Component(\n    immediate = true,\n    service = HelloService.class\n)\npublic class HelloUppercaseServiceImpl implements HelloService {\n    @Override\n    public String hello(String parameter) {\n        return parameter.toUpperCase();\n    }\n}",mode:"text/x-java"},null,o),r("aside"),r("h6"),l("span",null,null,"class","icon-16-star"),s(" Pro Tip"),i("h6"),r("p"),s("Notice that we're using another package here "),r("code"),s('("com.liferay.university.hello.uppercase.impl")'),i("code"),s(". OSGi works best when every package is published by exactly one bundle."),i("p"),i("aside"),i("article"),r("article",null,null,"id","2"),r("h2"),s("Before Deployment"),i("h2"),r("p"),s("Check that your command from the first exercise still works."),i("p"),c({code:"g! lb helloworld\ng! say hello\nhello",mode:"text"},null,o),i("article"),r("article",null,null,"id","3"),r("h5"),s("Deploy Your New Service Implementation"),i("h5"),r("p"),s("Next, deploy your new service implementation. Now that you have two implementations for the helloworld API, what do you expect to be printed now?"),i("p"),c({code:"hello or HELLO",mode:"text"},null,o),i("article"),r("article",null,null,"id","4"),r("h2"),s("Determining Service Implementation Priority"),i("h2"),r("p"),s("OSGi has the choice to freely bind whatever it needs. The requirement to have a service is satisfied by either of the two implementations. As the service is already bound, there’s no need to rebind."),i("p"),r("p"),r("strong"),s("Service Bundle ID"),i("strong"),i("p"),r("p"),s("In fact, one of OSGi’s strategies to determine which service has higher priority is the service bundle id - in this case the original implementation: A lower id has higher priority and will be preferred over a higher id."),i("p"),r("p"),r("strong"),s("But Wait, There’s More"),i("strong"),i("p"),r("p"),s("You might have heard about another criterion, one that you can influence: It’s called service rank. By default, services have a rank of 0, and if you configure a higher rank, the higher ranked service is preferred."),i("p"),r("p"),r("strong"),s("Note:"),i("strong"),s(" For services with the same rank, the OSGi runtime will determine priority by id."),i("p"),i("article"),r("article",null,null,"id","5"),r("h2"),s("Service Rank"),i("h2"),r("p"),s("Let’s change our implementation and revalidate. Again: Think about your expectation. Make a mental or write it down."),i("p"),c({code:'@Component(\n    immediate = true,\n    property = {\n        "service.ranking:Integer=100"\n    },\n    service = HelloService.class\n)\npublic class HelloUppercaseServiceImpl implements HelloService {\n    @Override\n    public String hello(String parameter) {\n        return parameter.toUpperCase();\n    }\n}',mode:"text/x-java"},null,o),r("p"),r("strong"),s("Note:"),i("strong"),s(" Developer Studio can redeploy your service automatically."),i("p"),i("article"),r("article",null,null,"id","6"),r("h2"),s("Check Gogo Shell"),i("h2"),c({code:"g! lb helloworld\nSTART LEVEL 20\n   ID|State      |Level|Name\n  590|Active     |    1|helloworld-api (1.0.0)\n  591|Active     |    1|helloworld-service (1.0.0)\n  592|Active     |    1|helloworld-command (1.0.0)\n  593|Active     |    1|helloworld-capitalization-service (1.0.0)\ng! stop 592\ng! start 592\ng! say hello\nHELLO",mode:"text"},null,o),r("p"),s("So, there we are: The higher ranking service has been bound when the command has been restarted - it was the highest service rank available when they were looked up."),i("p"),r("p"),r("strong"),s("Learn By Experimenting"),i("strong"),i("p"),r("p"),s("Figure out what happens when you stop the highest ranking service, and start it again. Think about your expectations beforehand."),i("p"),i("article"),r("article",null,null,"id","7"),r("h2"),s("Service References"),i("h2"),r("p"),r("strong"),s("Static Binding"),i("strong"),i("p"),r("p"),s("You’ve learned that the reference to services defaults to being static and will only be reconsidered upon restarting the dependent service - in our case the Gogo shell command."),i("p"),r("p"),r("strong"),s("Dynamic Binding"),i("strong"),i("p"),r("p"),s("But what if you want to be more dynamic? This works as well, but you’ll need to let the runtime know that you’d like to get an updated service whenever a better one is available. Here’s an implementation for such a case."),i("p"),c({code:'@Component(\nimmediate = true,\n    property = {\n        "osgi.command.function=say",\n        "osgi.command.scope=custom"\n    },\n    service = Object.class\n)\npublic class HelloWorldCommand {\n    \n    public void say(String what) {\n        System.out.println(helloService.hello(what));\n    }\n    \n    @Reference(\n               policy=ReferencePolicy.DYNAMIC,\n               policyOption=ReferencePolicyOption.GREEDY,\n               cardinality=ReferenceCardinality.MANDATORY)\n    protected void setHelloService(HelloService helloService) {\n        System.out.println("Setting " + helloService.getClass().getName());\n        this.helloService = helloService;\n    }\n    \n    protected void unsetHelloService(HelloService helloService) {\n        System.out.println("Unsetting helloService " + helloService.getClass().getName());\n        if (helloService == this.helloService) {\n            this.helloService = null;\n        }\n    }\n\n    private HelloService helloService;\n}',mode:"text/x-java"},null,o),r("p"),r("strong"),s("Note:"),i("strong"),s(" We now need a specific set and unset method for our reference, according to the OSGi specification:"),i("p"),r("h6"),s("Try It!"),i("h6"),r("p"),s("Deploy the new command, then restart the service implementations as you like. Validate the behavior of the system. Did the results match your expectations?"),i("p"),r("p"),s("Well, at least you’ve seen one area where common expectation and the actual behavior of the runtime can differ. But that’s easy to fix, once you know what to expect."),i("p"),i("article"),r("article",null,null,"id","8"),r("h2"),s("More References"),i("h2"),r("p"),s("As promised: Liferay's documentation has fabulous chapters about more options. Because we explicitly only want to cover the bare minimum - please see the documentation for more details."),i("p"),r("p"),s("We hope you've gotten some good hints here and have a better understanding of the runtime behavior set:"),i("p"),r("ul"),r("li"),r("a",null,null,"href","https://customer.liferay.com/documentation/7.0/develop/tutorials/-/official_documentation/tutorials/overriding-service-references"),s("Overriding service references"),i("a"),i("li"),r("li"),r("a",null,null,"href","https://customer.liferay.com/documentation/7.0/develop/reference/-/official_documentation/reference/using-the-felix-gogo-shell"),s("Using Felix Gogo Shell"),i("a"),i("li"),i("ul"),i("article"),r("input",null,null,"type","hidden","value",e.page.title),i("input"),r("input",null,null,"type","hidden","value",e.site.title),i("input")};p(n.$$assignDefaults({content:a},e),null,o)}goog.module("jefDs.incrementaldom");var n=goog.require("soy");goog.require("soydata");goog.require("goog.asserts"),goog.require("soy.asserts"),goog.require("goog.i18n.bidi"),goog.require("goog.string");var o=goog.require("incrementaldom"),r=o.elementOpen,i=o.elementClose,l=o.elementVoid,s=(o.elementOpenStart,o.elementOpenEnd,o.text),c=(o.attr,u.default.getTemplate("ElectricCode.incrementaldom","render")),p=u.default.getTemplate("guide.incrementaldom","render");return e.render=t,goog.DEBUG&&(t.soyTemplateName="jefDs.render"),e.render.params=["page","site"],e.render.types={page:"?",site:"?"},e.templates=a=e,e});var h=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return l(t,e),t}(c.default);u.default.register(h,a),t.jefDs=h,t.templates=a,t.default=a}},[270]);